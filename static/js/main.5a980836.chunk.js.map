{"version":3,"sources":["components/Products/Products.js","components/Filter/Filter.js","components/Basket/Basket.js","App.js","index.js"],"names":["Products","productItems","this","props","products","map","product","className","key","id","href","onClick","e","handleAddToCart","src","sku","alt","title","price","toFixed","Component","Filter","count","value","sort","onChange","handleChangeSort","size","handleChangeSize","Basket","cartItems","cartItemCount","reduce","countTotal","currentItem","length","item","handleRemoveFromCart","currentTotal","alert","App","state","filteredProducts","listProducts","setState","a","b","filter","availableSizes","indexOf","toUpperCase","target","productAlreadyInCart","forEach","push","localStorage","setItem","JSON","stringify","console","log","fetch","then","response","json","data","getItem","parse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a980836.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Products extends Component {\r\n    render() {\r\n        const productItems = this.props.products.map(product => {\r\n            return (\r\n                <div className=\"col-md-4\" key={product.id}>\r\n                    <div className=\"thumbnail text-center\">\r\n                        <a href={`#${product.id}`} onClick={e => this.props.handleAddToCart(e, product)}>\r\n                            <img src={`/products/${product.sku}_2.jpg`} alt={product.title} />\r\n                            <p>{product.title}</p>\r\n                        </a>\r\n                        <div>\r\n                            <b>${product.price.toFixed(2)}</b>\r\n                            <button \r\n                                className=\"btn btn-primary\" \r\n                                onClick={e => this.props.handleAddToCart(e, product)}>\r\n                                Add To Cart\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n          }\r\n        )\r\n        return (\r\n            <div className=\"row\">\r\n                {productItems}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Products;","import React, { Component } from 'react';\r\n\r\nclass Filter extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"row\">\r\n            \r\n                <div className=\"col-md-4\">\r\n                    <p>{this.props.count} products found.</p>\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <label> \r\n                        Order By\r\n                        <select className=\"form-control\" value={this.props.sort}\r\n                            onChange={this.props.handleChangeSort}>\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"lowest\">Lowest To Highest</option>\r\n                            <option value=\"highest\">Highest To Lowest</option>\r\n                        </select>\r\n                    </label> \r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <label> \r\n                        Filter Size\r\n                        <select className=\"form-control\" value={this.props.size}\r\n                            onChange={this.props.handleChangeSize}>\r\n                            <option value=\"\">ALL</option>\r\n                            <option value=\"x\">XS</option>\r\n                            <option value=\"s\">S</option>\r\n                            <option value=\"m\">M</option>\r\n                            <option value=\"l\">L</option>\r\n                            <option value=\"xl\">XL</option>\r\n                            <option value=\"xxl\">XXL</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filter; ","import React, { Component } from 'react';\r\n\r\nclass Basket extends Component {\r\n    render() {\r\n        const {cartItems} = this.props; //same as this.props.cartItems but use Object destructuring \r\n        const cartItemCount = cartItems.reduce((countTotal, currentItem) => countTotal + currentItem.count, 0);\r\n        return (\r\n            <div className=\"alert alert-info\">\r\n                {!cartItems.length ? \"Basket is empty\" : <div>You have {cartItemCount} products in your cart</div>}\r\n                {cartItems.length > 0 &&\r\n                    <div>\r\n                        <ul>\r\n                            {cartItems.map(item => \r\n                                <li key={item.id}>\r\n                                    <b>{item.title}</b> \r\n                                    <br />\r\n                                    x {item.count} = ${(item.price * item.count).toFixed(2)}\r\n                                    <button className=\"btn btn-danger btn-sm cartItemBtn\"\r\n                                    onClick={e => this.props.handleRemoveFromCart(e, item)}\r\n                                    >\r\n                                    X\r\n                                    </button>\r\n                                </li>)}\r\n                        </ul>\r\n                        Total: ${cartItems.reduce((currentTotal, currentItem) => currentTotal + currentItem.price * currentItem.count, 0).toFixed(2)}\r\n                        <br/>\r\n                        <button className=\"btn btn-primary\" onClick={() => alert('You Are Ready To Checkout!')}>Checkout</button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Basket;","import React, { Component } from 'react';\nimport Products from './components/Products/Products';\nimport Filter from './components/Filter/Filter';\nimport Basket from './components/Basket/Basket';\nimport './App.css';\n\nclass App extends Component { \n  state = {\n    products: [],\n    filteredProducts: [],\n    cartItems: [],\n    size: '',\n    sort: ''\n  };\n\n  componentDidMount() {\n    // fetch(\"http://localhost:8000/products\")\n    //     .then(response=> response.json())\n    //     .then(data => this.setState({ \n    //       products: data,\n    //       filteredProducts: data\n    //     })\n    //   );\n    fetch(\"https://my-json-server.typicode.com/InnaMon/ecommerce-shopping-cart/products\")\n      .then(response=> response.json())\n      .then(data => this.setState({ \n        products: data,\n        filteredProducts: data\n      })\n    );\n    if(localStorage.getItem('cartItems')) {\n      this.setState({cartItems: JSON.parse(localStorage.getItem('cartItems'))}) \n      // returns valued saved under the 'cartItems' key\n    } \n    // fetches from localStorage the saved basket and then parses string into JS object, now data does not dissapear upon every page refresh\n  }\n\n  listProducts = () => {\n    this.setState(state => {\n      if(state.sort) { //if a sort value is present\n        state.products.sort((a,b) => //compare two items in product array at a time  \n          (state.sort === 'lowest'\n          ? ((a.price > b.price) ? 1 : -1) //if 'lowest' value selected, compare item prices in porduct array and if a > b then return that item first, otherwise return last \n          : ((a.price < b.price) ? 1 : -1))) //otherwise sort the 'highest' value filter\n      } else {\n        state.products.sort((a,b) => (a.id > b.id) ? 1 : -1); //sorting product array by id is default mode \n      }\n      if(state.size) {\n        return { filteredProducts: state.products.filter(a => \n          a.availableSizes.indexOf(state.size.toUpperCase()) >= 0\n        )} //filter array returns new array, a is each object item in products array, and what follow is the condition: return all products that have the state.size selected\n      }\n      return {filteredProducts: state.products}; //by default if no size is chosen then return all state.products\n    });\n  }\n\n  handleChangeSort = e => {\n    this.setState({sort: e.target.value}); //sort filter value options: lowerst, highest, or select(default)\n    this.listProducts();\n  }\n\n  handleChangeSize = e => {\n    this.setState({size: e.target.value}); //size will either be: XS, S, M, L, XL, or XXL\n    this.listProducts();\n  }\n\n  handleAddToCart = (e, product) => {\n    this.setState(state => {\n      const cartItems = state.cartItems; //initially an empty array\n      let productAlreadyInCart = false;\n\n      cartItems.forEach(item => {\n        if(item.id === product.id){\n          productAlreadyInCart = true;\n          item.count++;\n        }\n      });\n\n      if(!productAlreadyInCart) {\n        cartItems.push({...product, count: 1}); //add the selected product object into the cartItems array along with the count property\n      }\n      localStorage.setItem('cartItems', JSON.stringify(cartItems)); \n      //saves cartItem value inside the key of \"cardItems\"(name of localStorage item), must be saved as a string\n      return { cartItems: cartItems };\n    });\n    console.log('cartItems', this.state.cartItems);\n  }\n\n  handleRemoveFromCart = (e, product) => {\n    this.setState(state => {\n      const cartItems = state.cartItems;\n      if(product.count > 1) {\n        cartItems.forEach(item => {\n          if(item.id === product.id){\n            item.count--;\n          }\n        });\n      } else {\n        return {cartItems: cartItems.filter(item => item.id !== product.id)}; //returns a new array of all cartItems that EXCLUDE the selected product\n      }\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return {cartItems};\n    })\n    console.log('local sotrage cartItems', this.state.cartItems)\n  }\n\n  render() {\n    console.log('products', this.state);\n    return (\n      <div className=\"container\">\n        <h1>Ecommerce Shopping Cart Application</h1>\n        <hr/>\n        <div className=\"row\">\n\n          <div className=\"col-md-8\">\n            <Filter \n            size={this.state.size} \n            sort={this.state.sort} \n            handleChangeSize={this.handleChangeSize} \n            handleChangeSort={this.handleChangeSort}\n            count={this.state.filteredProducts.length}/>\n            <hr/>\n            <Products \n              products={this.state.filteredProducts} \n              handleAddToCart={this.handleAddToCart}/>\n          </div>\n\n          <div className=\"col-md-4\">\n            <Basket \n              cartItems={this.state.cartItems}\n              handleRemoveFromCart={this.handleRemoveFromCart}/>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// Can now use http://localhost:3000/products with FETCH method to retriece the json data \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}